name: Python application

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    env:
      EDM_FULL: '2.5.0'
      EDM_X_Y: '2.5'
      EDM_NAME: 'edm_cli_'
      DISPLAY: ':0'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Set Unix environment variables
      if: runner.os != 'Windows'
      run: |
        echo "::set-env name=ETS_TOOLKIT::qt4"
        echo "::add-path::/home/runner/bin"

    - name: Set Windows environment variables
      if: runner.os == 'Windows'
      run: |
        $Env:path = "C:/Enthought/edm;" + $Env:path
        echo "::set-env name=ETS_TOOLKIT::wx"

    - name: Install X-Server and LibGLU
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install --yes xserver-xorg libglu1-mesa-dev mesa-common-dev libxcb-icccm4 libxkbcommon-x11-0
        sudo /usr/bin/X :0&

    - name: Install Linux EDM
      if: runner.os == 'Linux'
      run: |
        export EDM_INSTALLER=${EDM_NAME}${EDM_FULL}_linux_x86_64.sh
        wget https://package-data.enthought.com/edm/rh6_x86_64/${EDM_X_Y}/${EDM_INSTALLER}
        bash ./${EDM_INSTALLER} -b -f -p $HOME

    - name: Install macOS EDM
      if: runner.os == 'macOS'
      run: |
        export EDM_INSTALLER=${EDM_NAME}${EDM_FULL}.pkg
        wget https://package-data.enthought.com/edm/osx_x86_64/${EDM_X_Y}/${EDM_INSTALLER}
        sudo installer -pkg ./${EDM_INSTALLER} -target $HOME

    - name: Install Windows EDM
      if: runner.os == 'Windows'
      run: |
        d:\a\PyFibre\PyFibre\.github\workflows\install-edm-windows.cmd

    - name: Build EDM environment
      run: |
        edm install --version 3.6 -y click setuptools
        edm run -- python -m ci build-env

    - name: Install dependencies and package
      run: |
        edm run -- python -m ci install

    - name: Test with unittest
      run: |
        edm run -- python -m ci test

    - name: Run coverage
      if: runner.os == 'Linux'
      run: |
        edm run -- python -m ci coverage

    - name: Archive code coverage results
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov/

    - name: Lint with flake8
      if: runner.os == 'Linux'
      run: |
        edm run -- python -m ci flake8

    - name: Perform integration test
      run: |
        edm run -- python -m ci shell
        edm run -e pyfibre-py36 -- PyFibre --test
