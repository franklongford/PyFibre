name: Python application

on: [push]

env:
  DISPLAY: ':0'
  INSTALL_EDM_VERSION: 3.2.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        toolkit: ['pyqt5']
    env:
      # Set root directory, mainly for Windows, so that the EDM Python
      # environment lives in the same drive as the cloned source. Otherwise
      # 'pip install' raises an error while trying to compute
      # relative path between the site-packages and the source directory.
      EDM_ROOT_DIRECTORY: ${{ github.workspace }}/.edm

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install X-Server and LibGLU
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install qt5-default
        sudo apt-get install libxkbcommon-x11-0
        sudo apt-get install libxcb-icccm4
        sudo apt-get install libxcb-image0
        sudo apt-get install libxcb-keysyms1
        sudo apt-get install libxcb-randr0
        sudo apt-get install libxcb-render-util0
        sudo apt-get install libxcb-xinerama0

    - name: Setup EDM
      uses: enthought/setup-edm-action@v1
      with:
        edm-version: ${{ env.INSTALL_EDM_VERSION }}

    - name: Build EDM environment
      run: |
        edm install --version 3.6 -y click setuptools
        edm run -- python -m ci build-env

    - name: Install dependencies and package
      run: |
        edm run -- python -m ci install

    - name: Test with unittest
      run: |
        edm run -- python -m ci test

    - name: Run coverage
      uses: GabrielBB/xvfb-action@v1
      if: runner.os == 'Linux'
      with:
        run: edm run -- python -m ci coverage
        working-directory: ${{ runner.temp }}

    - name: Archive code coverage results
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: htmlcov/

    - name: Lint with flake8
      if: runner.os == 'Linux'
      run: |
        edm run -- python -m ci flake8

    - name: Perform integration test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: |
          edm run -- python -m ci shell
          edm run -e pyfibre-py36 -- PyFibre --test
        working-directory: ${{ runner.temp }}
        
